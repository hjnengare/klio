{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HilarioNengare/Projects/KLIO/src/app/lib/supabase/client.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { createBrowserClient } from \"@supabase/ssr\";\r\n\r\nexport function getBrowserSupabase() {\r\n  return createBrowserClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AAAA;AAFA;;AAIO,SAAS;IACd,OAAO,IAAA,iMAAmB;AAI5B","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HilarioNengare/Projects/KLIO/src/app/lib/auth.ts"],"sourcesContent":["import { getBrowserSupabase } from './supabase/client';\r\nimport type { AuthUser, SignUpData, SignInData, AuthError } from './types/database';\r\n\r\nexport class AuthService {\r\n  private static getClient() {\r\n    return getBrowserSupabase();\r\n  }\r\n\r\n  static async signUp({ email, password }: SignUpData): Promise<{ user: AuthUser | null; error: AuthError | null }> {\r\n    const supabase = this.getClient();\r\n    try {\r\n      // Basic validation\r\n      if (!email?.trim() || !password?.trim()) {\r\n        return {\r\n          user: null,\r\n          error: { message: 'Email and password are required' }\r\n        };\r\n      }\r\n\r\n      if (!this.isValidEmail(email)) {\r\n        return {\r\n          user: null,\r\n          error: { message: 'Please enter a valid email address' }\r\n        };\r\n      }\r\n\r\n      if (password.length < 8) {\r\n        return {\r\n          user: null,\r\n          error: { message: 'Password must be at least 8 characters long' }\r\n        };\r\n      }\r\n\r\n      if (!this.isStrongPassword(password)) {\r\n        return {\r\n          user: null,\r\n          error: { message: 'Password must contain at least one uppercase letter, one lowercase letter, and one number' }\r\n        };\r\n      }\r\n\r\n      const { data, error } = await supabase.auth.signUp({\r\n        email: email.trim().toLowerCase(),\r\n        password: password,\r\n        options: {\r\n          emailRedirectTo: undefined, // Disable email confirmation for now\r\n        }\r\n      });\r\n\r\n      if (error) {\r\n        console.error('Supabase signup error:', error);\r\n        return {\r\n          user: null,\r\n          error: this.handleSupabaseError(error)\r\n        };\r\n      }\r\n\r\n      if (!data.user) {\r\n        return {\r\n          user: null,\r\n          error: { message: 'Registration failed. Please try again.' }\r\n        };\r\n      }\r\n\r\n      // Profile will be created by database trigger, no need to create manually\r\n\r\n      return {\r\n        user: {\r\n          id: data.user.id,\r\n          email: data.user.email!,\r\n          created_at: data.user.created_at,\r\n          updated_at: data.user.updated_at || data.user.created_at\r\n        },\r\n        error: null\r\n      };\r\n    } catch (error: unknown) {\r\n      return {\r\n        user: null,\r\n        error: {\r\n          message: error instanceof Error ? error.message : 'An unexpected error occurred',\r\n          details: error\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  static async signIn({ email, password }: SignInData): Promise<{ user: AuthUser | null; error: AuthError | null }> {\r\n    const supabase = this.getClient();\r\n    try {\r\n      if (!email?.trim() || !password?.trim()) {\r\n        return {\r\n          user: null,\r\n          error: { message: 'Email and password are required' }\r\n        };\r\n      }\r\n\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email: email.trim().toLowerCase(),\r\n        password: password\r\n      });\r\n\r\n      if (error) {\r\n        return {\r\n          user: null,\r\n          error: this.handleSupabaseError(error)\r\n        };\r\n      }\r\n\r\n      if (!data.user) {\r\n        return {\r\n          user: null,\r\n          error: { message: 'Login failed. Please try again.' }\r\n        };\r\n      }\r\n\r\n      // Get user profile\r\n      const profile = await this.getUserProfile(data.user.id);\r\n\r\n      return {\r\n        user: {\r\n          id: data.user.id,\r\n          email: data.user.email!,\r\n          created_at: data.user.created_at,\r\n          updated_at: data.user.updated_at || data.user.created_at,\r\n          profile: profile\r\n        },\r\n        error: null\r\n      };\r\n    } catch (error: unknown) {\r\n      return {\r\n        user: null,\r\n        error: {\r\n          message: error instanceof Error ? error.message : 'An unexpected error occurred',\r\n          details: error\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  static async signOut(): Promise<{ error: AuthError | null }> {\r\n    const supabase = this.getClient();\r\n    try {\r\n      const { error } = await supabase.auth.signOut();\r\n\r\n      if (error) {\r\n        return { error: this.handleSupabaseError(error) };\r\n      }\r\n\r\n      return { error: null };\r\n    } catch (error: unknown) {\r\n      return {\r\n        error: {\r\n          message: error instanceof Error ? error.message : 'An unexpected error occurred',\r\n          details: error\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  static async getCurrentUser(): Promise<AuthUser | null> {\r\n    const supabase = this.getClient();\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n\r\n      if (!user) return null;\r\n\r\n      const profile = await this.getUserProfile(user.id);\r\n\r\n      return {\r\n        id: user.id,\r\n        email: user.email!,\r\n        created_at: user.created_at,\r\n        updated_at: user.updated_at || user.created_at,\r\n        profile: profile\r\n      };\r\n    } catch (error) {\r\n      console.error('Error getting current user:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Removed createUserProfile - database trigger handles profile creation\r\n\r\n  private static async getUserProfile(userId: string) {\r\n    const supabase = this.getClient();\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('profiles')\r\n        .select('user_id, onboarding_step, interests_count, last_interests_updated, created_at, updated_at')\r\n        .eq('user_id', userId)\r\n        .single();\r\n\r\n      if (error || !data) return undefined;\r\n\r\n      return {\r\n        id: data.user_id,\r\n        onboarding_step: data.onboarding_step,\r\n        onboarding_complete: data.onboarding_step === 'complete',\r\n        interests_count: data.interests_count || 0,\r\n        last_interests_updated: data.last_interests_updated,\r\n        created_at: data.created_at,\r\n        updated_at: data.updated_at\r\n      };\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private static isValidEmail(email: string): boolean {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  }\r\n\r\n  private static isStrongPassword(password: string): boolean {\r\n    // At least 8 characters, 1 uppercase, 1 lowercase, 1 number\r\n    const strongPasswordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    return strongPasswordRegex.test(password);\r\n  }\r\n\r\n  private static handleSupabaseError(error: { message: string; error_code?: string }): AuthError {\r\n    // Handle specific error messages from Supabase\r\n    const message = error.message.toLowerCase();\r\n\r\n    if (message.includes('user already registered') || message.includes('email already exists') || message.includes('already been registered')) {\r\n      return { message: '‚ùå This email address is already taken. Try logging in instead.', code: 'user_exists' };\r\n    }\r\n\r\n    if (message.includes('invalid login credentials') || message.includes('invalid email or password')) {\r\n      return { message: '‚ùå Invalid email or password. Please check your credentials.', code: 'invalid_credentials' };\r\n    }\r\n\r\n    if (message.includes('email not confirmed')) {\r\n      return { message: 'üìß Please check your email and click the confirmation link to verify your account.', code: 'email_not_confirmed' };\r\n    }\r\n\r\n    if (message.includes('too many requests') || message.includes('rate limit')) {\r\n      return { message: '‚è∞ Too many attempts. Please wait a moment and try again.', code: 'rate_limit' };\r\n    }\r\n\r\n    if (message.includes('signup is disabled') || message.includes('signups not allowed')) {\r\n      return { message: 'üö´ New registrations are temporarily unavailable. Please try again later.', code: 'signup_disabled' };\r\n    }\r\n\r\n    if (message.includes('password') && (message.includes('weak') || message.includes('requirements'))) {\r\n      return { message: 'üîê Password doesn\\'t meet security requirements. Use 8+ characters with uppercase, lowercase, and numbers.', code: 'weak_password' };\r\n    }\r\n\r\n    if (message.includes('email') && (message.includes('invalid') || message.includes('format'))) {\r\n      return { message: 'üìß Please enter a valid email address (e.g., user@example.com).', code: 'invalid_email' };\r\n    }\r\n\r\n    if (message.includes('fetch') || message.includes('network') || message.includes('connection')) {\r\n      return { message: 'üåê Connection issue. Please check your internet and try again.', code: 'network_error' };\r\n    }\r\n\r\n    if (message.includes('422') || message.includes('unprocessable')) {\r\n      return { message: '‚ùå Registration failed. Please check that your email and password are valid.', code: 'invalid_data' };\r\n    }\r\n\r\n    // Default fallback with more user-friendly message\r\n    return {\r\n      message: error.message || '‚ùå Something went wrong. Please try again in a moment.',\r\n      code: error.error_code || 'unknown_error'\r\n    };\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HilarioNengare/Projects/KLIO/src/app/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { getBrowserSupabase } from '../lib/supabase/client';\r\nimport { AuthService } from '../lib/auth';\r\nimport type { AuthUser } from '../lib/types/database';\r\n\r\ninterface AuthContextType {\r\n  user: AuthUser | null;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  register: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => Promise<void>;\r\n  updateUser: (userData: Partial<AuthUser>) => Promise<void>;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function AuthProvider({ children }: AuthProviderProps) {\r\n  const [user, setUser] = useState<AuthUser | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const router = useRouter();\r\n  const supabase = getBrowserSupabase();\r\n\r\n  // Initialize auth state\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const currentUser = await AuthService.getCurrentUser();\r\n        setUser(currentUser);\r\n      } catch (error) {\r\n        console.error('Error initializing auth:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n\r\n    // Listen for auth changes\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session) => {\r\n      if (event === 'SIGNED_IN' && session?.user) {\r\n        const currentUser = await AuthService.getCurrentUser();\r\n        setUser(currentUser);\r\n      } else if (event === 'SIGNED_OUT') {\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n    return () => subscription.unsubscribe();\r\n  }, [supabase]);\r\n\r\n  const login = async (email: string, password: string): Promise<boolean> => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const { user: authUser, error: authError } = await AuthService.signIn({ email, password });\r\n\r\n      if (authError) {\r\n        setError(authError.message);\r\n        setIsLoading(false);\r\n        return false;\r\n      }\r\n\r\n      if (authUser) {\r\n        setUser(authUser);\r\n\r\n        // Redirect based on onboarding status\r\n        if (authUser.profile?.onboarding_complete) {\r\n          router.push('/home');\r\n        } else {\r\n          router.push(`/${authUser.profile?.onboarding_step || 'interests'}`);\r\n        }\r\n      }\r\n\r\n      setIsLoading(false);\r\n      return true;\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : 'Login failed';\r\n      setError(message);\r\n      setIsLoading(false);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const register = async (email: string, password: string): Promise<boolean> => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const { user: authUser, error: authError } = await AuthService.signUp({ email, password });\r\n\r\n      if (authError) {\r\n        // Handle specific error cases\r\n        let errorMessage = authError.message;\r\n        if (authError.message.includes('User already registered') || authError.message.includes('already registered')) {\r\n          errorMessage = 'An account with this email already exists. Please try logging in instead.';\r\n        }\r\n        setError(errorMessage);\r\n        setIsLoading(false);\r\n        return false;\r\n      }\r\n\r\n      if (authUser) {\r\n        setUser(authUser);\r\n        // Navigate to interests page after registration\r\n        router.push('/interests');\r\n      }\r\n\r\n      setIsLoading(false);\r\n      return true;\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : 'Registration failed';\r\n      setError(message);\r\n      setIsLoading(false);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = async (): Promise<void> => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const { error: signOutError } = await AuthService.signOut();\r\n\r\n      if (signOutError) {\r\n        setError(signOutError.message);\r\n      } else {\r\n        setUser(null);\r\n        router.push('/onboarding');\r\n      }\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : 'Logout failed';\r\n      setError(message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateUser = async (userData: Partial<AuthUser>): Promise<void> => {\r\n    if (!user) return;\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Update user profile in Supabase if profile data is being updated\r\n      if (userData.profile) {\r\n        // Prepare profile updates - only update fields that exist in the profiles table\r\n        const profileUpdates: Record<string, any> = {\r\n          updated_at: new Date().toISOString()\r\n        };\r\n\r\n        // Only update onboarding_step if provided\r\n        if (userData.profile.onboarding_step) {\r\n          profileUpdates.onboarding_step = userData.profile.onboarding_step;\r\n        }\r\n\r\n        // Update the profiles table with valid fields only\r\n        const { error } = await supabase\r\n          .from('profiles')\r\n          .update(profileUpdates)\r\n          .eq('user_id', user.id);\r\n\r\n        if (error) throw error;\r\n\r\n        // Handle interests separately using the dedicated API\r\n        if (userData.profile.interests && Array.isArray(userData.profile.interests)) {\r\n          try {\r\n            const response = await fetch('/api/user/interests', {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({ selections: userData.profile.interests })\r\n            });\r\n            if (!response.ok) {\r\n              console.warn('Failed to update interests:', await response.text());\r\n            }\r\n          } catch (interestError) {\r\n            console.warn('Error updating interests:', interestError);\r\n          }\r\n        }\r\n\r\n        // Handle subcategories separately using the dedicated API\r\n        if (userData.profile.sub_interests && Array.isArray(userData.profile.sub_interests)) {\r\n          try {\r\n            const response = await fetch('/api/user/subcategories', {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({ subcategories: userData.profile.sub_interests })\r\n            });\r\n            if (!response.ok) {\r\n              console.warn('Failed to update subcategories:', await response.text());\r\n            }\r\n          } catch (subcatError) {\r\n            console.warn('Error updating subcategories:', subcatError);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Update local user state\r\n      const updatedUser = {\r\n        ...user,\r\n        ...userData,\r\n        profile: userData.profile ? { ...user.profile, ...userData.profile } : user.profile\r\n      };\r\n      setUser(updatedUser);\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : 'Update failed';\r\n      setError(message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser,\r\n    isLoading,\r\n    error\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport type { AuthUser };"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAkBA,MAAM,4BAAc,IAAA,sNAAa,EAA8B;AAMxD,SAAS,aAAa,EAAE,QAAQ,EAAqB;IAC1D,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAkB;IAClD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAClD,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,WAAW,IAAA,6JAAkB;IAEnC,wBAAwB;IACxB,IAAA,kNAAS,EAAC;QACR,MAAM,iBAAiB;YACrB,aAAa;YAEb,IAAI;gBACF,MAAM,cAAc,MAAM,wIAAW,CAAC,cAAc;gBACpD,QAAQ;YACV,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,4BAA4B;YAC5C,SAAU;gBACR,aAAa;YACf;QACF;QAEA;QAEA,0BAA0B;QAC1B,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,GAAG,SAAS,IAAI,CAAC,iBAAiB,CAAC,OAAO,OAAO;YAC/E,IAAI,UAAU,eAAe,SAAS,MAAM;gBAC1C,MAAM,cAAc,MAAM,wIAAW,CAAC,cAAc;gBACpD,QAAQ;YACV,OAAO,IAAI,UAAU,cAAc;gBACjC,QAAQ;YACV;QACF;QAEA,OAAO,IAAM,aAAa,WAAW;IACvC,GAAG;QAAC;KAAS;IAEb,MAAM,QAAQ,OAAO,OAAe;QAClC,aAAa;QACb,SAAS;QAET,IAAI;YACF,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,wIAAW,CAAC,MAAM,CAAC;gBAAE;gBAAO;YAAS;YAExF,IAAI,WAAW;gBACb,SAAS,UAAU,OAAO;gBAC1B,aAAa;gBACb,OAAO;YACT;YAEA,IAAI,UAAU;gBACZ,QAAQ;gBAER,sCAAsC;gBACtC,IAAI,SAAS,OAAO,EAAE,qBAAqB;oBACzC,OAAO,IAAI,CAAC;gBACd,OAAO;oBACL,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,SAAS,OAAO,EAAE,mBAAmB,aAAa;gBACpE;YACF;YAEA,aAAa;YACb,OAAO;QACT,EAAE,OAAO,OAAgB;YACvB,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACzD,SAAS;YACT,aAAa;YACb,OAAO;QACT;IACF;IAEA,MAAM,WAAW,OAAO,OAAe;QACrC,aAAa;QACb,SAAS;QAET,IAAI;YACF,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,wIAAW,CAAC,MAAM,CAAC;gBAAE;gBAAO;YAAS;YAExF,IAAI,WAAW;gBACb,8BAA8B;gBAC9B,IAAI,eAAe,UAAU,OAAO;gBACpC,IAAI,UAAU,OAAO,CAAC,QAAQ,CAAC,8BAA8B,UAAU,OAAO,CAAC,QAAQ,CAAC,uBAAuB;oBAC7G,eAAe;gBACjB;gBACA,SAAS;gBACT,aAAa;gBACb,OAAO;YACT;YAEA,IAAI,UAAU;gBACZ,QAAQ;gBACR,gDAAgD;gBAChD,OAAO,IAAI,CAAC;YACd;YAEA,aAAa;YACb,OAAO;QACT,EAAE,OAAO,OAAgB;YACvB,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACzD,SAAS;YACT,aAAa;YACb,OAAO;QACT;IACF;IAEA,MAAM,SAAS;QACb,aAAa;QACb,SAAS;QAET,IAAI;YACF,MAAM,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,wIAAW,CAAC,OAAO;YAEzD,IAAI,cAAc;gBAChB,SAAS,aAAa,OAAO;YAC/B,OAAO;gBACL,QAAQ;gBACR,OAAO,IAAI,CAAC;YACd;QACF,EAAE,OAAO,OAAgB;YACvB,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACzD,SAAS;QACX,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,aAAa,OAAO;QACxB,IAAI,CAAC,MAAM;QAEX,aAAa;QACb,SAAS;QAET,IAAI;YACF,mEAAmE;YACnE,IAAI,SAAS,OAAO,EAAE;gBACpB,gFAAgF;gBAChF,MAAM,iBAAsC;oBAC1C,YAAY,IAAI,OAAO,WAAW;gBACpC;gBAEA,0CAA0C;gBAC1C,IAAI,SAAS,OAAO,CAAC,eAAe,EAAE;oBACpC,eAAe,eAAe,GAAG,SAAS,OAAO,CAAC,eAAe;gBACnE;gBAEA,mDAAmD;gBACnD,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SACrB,IAAI,CAAC,YACL,MAAM,CAAC,gBACP,EAAE,CAAC,WAAW,KAAK,EAAE;gBAExB,IAAI,OAAO,MAAM;gBAEjB,sDAAsD;gBACtD,IAAI,SAAS,OAAO,CAAC,SAAS,IAAI,MAAM,OAAO,CAAC,SAAS,OAAO,CAAC,SAAS,GAAG;oBAC3E,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM,uBAAuB;4BAClD,QAAQ;4BACR,SAAS;gCAAE,gBAAgB;4BAAmB;4BAC9C,MAAM,KAAK,SAAS,CAAC;gCAAE,YAAY,SAAS,OAAO,CAAC,SAAS;4BAAC;wBAChE;wBACA,IAAI,CAAC,SAAS,EAAE,EAAE;4BAChB,QAAQ,IAAI,CAAC,+BAA+B,MAAM,SAAS,IAAI;wBACjE;oBACF,EAAE,OAAO,eAAe;wBACtB,QAAQ,IAAI,CAAC,6BAA6B;oBAC5C;gBACF;gBAEA,0DAA0D;gBAC1D,IAAI,SAAS,OAAO,CAAC,aAAa,IAAI,MAAM,OAAO,CAAC,SAAS,OAAO,CAAC,aAAa,GAAG;oBACnF,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM,2BAA2B;4BACtD,QAAQ;4BACR,SAAS;gCAAE,gBAAgB;4BAAmB;4BAC9C,MAAM,KAAK,SAAS,CAAC;gCAAE,eAAe,SAAS,OAAO,CAAC,aAAa;4BAAC;wBACvE;wBACA,IAAI,CAAC,SAAS,EAAE,EAAE;4BAChB,QAAQ,IAAI,CAAC,mCAAmC,MAAM,SAAS,IAAI;wBACrE;oBACF,EAAE,OAAO,aAAa;wBACpB,QAAQ,IAAI,CAAC,iCAAiC;oBAChD;gBACF;YACF;YAEA,0BAA0B;YAC1B,MAAM,cAAc;gBAClB,GAAG,IAAI;gBACP,GAAG,QAAQ;gBACX,SAAS,SAAS,OAAO,GAAG;oBAAE,GAAG,KAAK,OAAO;oBAAE,GAAG,SAAS,OAAO;gBAAC,IAAI,KAAK,OAAO;YACrF;YACA,QAAQ;QACV,EAAE,OAAO,OAAgB;YACvB,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACzD,SAAS;QACX,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,QAAyB;QAC7B;QACA;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,IAAA,mNAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HilarioNengare/Projects/KLIO/src/app/contexts/ToastContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport { CheckCircle, XCircle, AlertTriangle, Info, X, Sparkles } from 'lucide-react';\r\n\r\ninterface Toast {\r\n  id: string;\r\n  message: string;\r\n  type: 'success' | 'error' | 'info' | 'warning' | 'sage';\r\n  duration?: number;\r\n}\r\n\r\ninterface ToastContextType {\r\n  showToast: (message: string, type?: Toast['type'], duration?: number) => void;\r\n  removeToast: (id: string) => void;\r\n}\r\n\r\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\r\n\r\ninterface ToastProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function ToastProvider({ children }: ToastProviderProps) {\r\n  const [toasts, setToasts] = useState<Toast[]>([]);\r\n\r\n  // Generate unique ID to prevent collisions\r\n  const generateUniqueId = () => {\r\n    return `toast_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  };\r\n\r\n  const showToast = (message: string, type: Toast['type'] = 'info', duration = 4000) => {\r\n    const id = generateUniqueId();\r\n    const newToast: Toast = { id, message, type, duration };\r\n\r\n    setToasts(prev => [...prev, newToast]);\r\n\r\n    // Auto remove toast after duration\r\n    setTimeout(() => {\r\n      removeToast(id);\r\n    }, duration);\r\n  };\r\n\r\n  const removeToast = (id: string) => {\r\n    setToasts(prev => prev.filter(toast => toast.id !== id));\r\n  };\r\n\r\n  const getToastStyles = (type: Toast['type']) => {\r\n    switch (type) {\r\n      case 'success':\r\n        return 'bg-white   text-sage';\r\n      case 'sage':\r\n        return 'bg-white   text-sage';\r\n      case 'error':\r\n        return 'bg-white   text-red-500';\r\n      case 'warning':\r\n        return 'bg-white   text-amber-500';\r\n      default:\r\n        return 'bg-white   text-charcoal';\r\n    }\r\n  };\r\n\r\n  const getToastIcon = (type: Toast['type']) => {\r\n    const iconClasses = \"w-5 h-5 flex-shrink-0\";\r\n    switch (type) {\r\n      case 'success':\r\n        return <CheckCircle className={iconClasses} />;\r\n      case 'sage':\r\n        return <Sparkles className={iconClasses} />;\r\n      case 'error':\r\n        return <XCircle className={iconClasses} />;\r\n      case 'warning':\r\n        return <AlertTriangle className={iconClasses} />;\r\n      default:\r\n        return <Info className={iconClasses} />;\r\n    }\r\n  };\r\n\r\n  const value: ToastContextType = {\r\n    showToast,\r\n    removeToast\r\n  };\r\n\r\n  return (\r\n    <ToastContext.Provider value={value}>\r\n      {children}\r\n\r\n      {/* Toast Container - Bottom-left position */}\r\n      {toasts.length > 0 && (\r\n        <div className=\"fixed bottom-4 left-4 z-[9999] flex flex-col-reverse gap-2 pointer-events-none max-w-sm\">\r\n          {toasts.map((toast) => (\r\n            <div\r\n              key={toast.id}\r\n              className={`\r\n                pointer-events-auto max-w-sm w-full backdrop-blur-xl rounded-xl p-4 shadow-2xl border border-sage/20\r\n                transition-all duration-300 ease-out animate-in slide-in-from-left\r\n                ${getToastStyles(toast.type)}\r\n              `}\r\n            >\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"flex-shrink-0\">\r\n                  {getToastIcon(toast.type)}\r\n                </div>\r\n                <div className=\"flex-1 min-w-0\">\r\n                  <p className=\"font-sf text-sm font-600 leading-tight\">\r\n                    {toast.message}\r\n                  </p>\r\n                </div>\r\n                <button\r\n                  onClick={() => removeToast(toast.id)}\r\n                  className=\"flex-shrink-0 ml-2 opacity-70 hover:opacity-100 transition-opacity duration-200 p-1 hover:bg-charcoal/10 rounded-full\"\r\n                  aria-label=\"Dismiss notification\"\r\n                >\r\n                  <X className=\"w-4 h-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </ToastContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useToast() {\r\n  const context = useContext(ToastContext);\r\n  if (context === undefined) {\r\n    throw new Error('useToast must be used within a ToastProvider');\r\n  }\r\n  return context;\r\n}"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;;;;AAiBA,MAAM,6BAAe,IAAA,sNAAa,EAA+B;AAM1D,SAAS,cAAc,EAAE,QAAQ,EAAsB;IAC5D,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAU,EAAE;IAEhD,2CAA2C;IAC3C,MAAM,mBAAmB;QACvB,OAAO,CAAC,MAAM,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI;IACzE;IAEA,MAAM,YAAY,CAAC,SAAiB,OAAsB,MAAM,EAAE,WAAW,IAAI;QAC/E,MAAM,KAAK;QACX,MAAM,WAAkB;YAAE;YAAI;YAAS;YAAM;QAAS;QAEtD,UAAU,CAAA,OAAQ;mBAAI;gBAAM;aAAS;QAErC,mCAAmC;QACnC,WAAW;YACT,YAAY;QACd,GAAG;IACL;IAEA,MAAM,cAAc,CAAC;QACnB,UAAU,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;IACtD;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,cAAc;QACpB,OAAQ;YACN,KAAK;gBACH,qBAAO,8OAAC,0OAAW;oBAAC,WAAW;;;;;;YACjC,KAAK;gBACH,qBAAO,8OAAC,sNAAQ;oBAAC,WAAW;;;;;;YAC9B,KAAK;gBACH,qBAAO,8OAAC,uNAAO;oBAAC,WAAW;;;;;;YAC7B,KAAK;gBACH,qBAAO,8OAAC,yOAAa;oBAAC,WAAW;;;;;;YACnC;gBACE,qBAAO,8OAAC,0MAAI;oBAAC,WAAW;;;;;;QAC5B;IACF;IAEA,MAAM,QAA0B;QAC9B;QACA;IACF;IAEA,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;;YAC3B;YAGA,OAAO,MAAM,GAAG,mBACf,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC;wBAEC,WAAW,CAAC;;;gBAGV,EAAE,eAAe,MAAM,IAAI,EAAE;cAC/B,CAAC;kCAED,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACZ,aAAa,MAAM,IAAI;;;;;;8CAE1B,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAE,WAAU;kDACV,MAAM,OAAO;;;;;;;;;;;8CAGlB,8OAAC;oCACC,SAAS,IAAM,YAAY,MAAM,EAAE;oCACnC,WAAU;oCACV,cAAW;8CAEX,cAAA,8OAAC,iMAAC;wCAAC,WAAU;;;;;;;;;;;;;;;;;uBArBZ,MAAM,EAAE;;;;;;;;;;;;;;;;AA8B3B;AAEO,SAAS;IACd,MAAM,UAAU,IAAA,mNAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HilarioNengare/Projects/KLIO/src/app/contexts/OnboardingContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { createContext, useContext, useState, useCallback, ReactNode } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from './AuthContext';\r\nimport { useToast } from './ToastContext';\r\n\r\ninterface Interest {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  icon?: string;\r\n}\r\n\r\ninterface Subcategory {\r\n  id: string;\r\n  label: string;\r\n  interest_id: string;\r\n}\r\n\r\ninterface OnboardingContextType {\r\n  // Data\r\n  interests: Interest[];\r\n  subInterests: Subcategory[];\r\n  selectedInterests: string[];\r\n  selectedSubInterests: string[];\r\n  selectedDealbreakers: string[];\r\n\r\n  // State\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  currentStep: string;\r\n\r\n  // Actions\r\n  loadInterests: () => Promise<void>;\r\n  loadSubInterests: (parentIds?: string[]) => Promise<void>;\r\n  setSelectedInterests: (interests: string[]) => void;\r\n  setSelectedSubInterests: (subInterests: string[]) => void;\r\n  setSelectedDealbreakers: (dealbreakers: string[]) => void;\r\n  nextStep: () => Promise<void>;\r\n  completeOnboarding: () => Promise<void>;\r\n  resetOnboarding: () => void;\r\n}\r\n\r\nconst OnboardingContext = createContext<OnboardingContextType | undefined>(undefined);\r\n\r\ninterface OnboardingProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst ONBOARDING_STEPS = [\r\n  'interests',\r\n  'subcategories',\r\n  'deal-breakers',\r\n  'complete'\r\n];\r\n\r\n// Fallback data in case API fails\r\nconst FALLBACK_INTERESTS: Interest[] = [\r\n  { id: 'food-drink', name: 'Food & Drink', description: 'Restaurants, cafes, and culinary experiences', icon: 'restaurant' },\r\n  { id: 'beauty-wellness', name: 'Beauty & Wellness', description: 'Gyms, spas, and personal care services', icon: 'cut' },\r\n  { id: 'home-services', name: 'Home & Services', description: 'Home improvement and professional services', icon: 'home' },\r\n  { id: 'outdoors-adventure', name: 'Outdoors & Adventure', description: 'Outdoor activities and adventures', icon: 'bicycle' },\r\n  { id: 'nightlife-entertainment', name: 'Nightlife & Entertainment', description: 'Movies, shows, and nightlife', icon: 'musical-notes' },\r\n  { id: 'arts-culture', name: 'Arts & Culture', description: 'Museums, galleries, and cultural experiences', icon: 'color-palette' },\r\n  { id: 'family-pets', name: 'Family & Pets', description: 'Family activities and pet services', icon: 'heart' },\r\n  { id: 'shopping-lifestyle', name: 'Shopping & Lifestyle', description: 'Retail stores and lifestyle services', icon: 'bag' }\r\n];\r\n\r\nexport function OnboardingProvider({ children }: OnboardingProviderProps) {\r\n  const { user, updateUser } = useAuth();\r\n  const { showToast } = useToast();\r\n  const router = useRouter();\r\n  const [interests, setInterests] = useState<Interest[]>([]);\r\n  const [subInterests, setSubInterests] = useState<Subcategory[]>([]);\r\n  const [selectedInterests, setSelectedInterests] = useState<string[]>([]);\r\n  const [selectedSubInterests, setSelectedSubInterests] = useState<string[]>([]);\r\n  const [selectedDealbreakers, setSelectedDealbreakers] = useState<string[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const currentStep = user?.profile?.onboarding_step || 'interests';\r\n\r\n  const loadInterests = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      // Load from catalog API\r\n      const response = await fetch('/api/interests');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.interests && Array.isArray(data.interests)) {\r\n          setInterests(data.interests);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Fallback to static data if API fails\r\n      console.warn('Interests API failed, using fallback data');\r\n      setInterests(FALLBACK_INTERESTS);\r\n    } catch (error) {\r\n      console.error('Error loading interests:', error);\r\n      setError('Failed to load interests');\r\n      // Use fallback data even on error\r\n      setInterests(FALLBACK_INTERESTS);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const loadSubInterests = useCallback(async (interestIds: string[]) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const qs = interestIds.length ? `?interests=${interestIds.join(\",\")}` : \"\";\r\n      const res = await fetch(`/api/subcategories${qs}`, { cache: \"no-store\" });\r\n      if (!res.ok) throw new Error(\"Failed to load subcategories\");\r\n      const { subcategories } = await res.json();\r\n\r\n      // Set subcategories directly - they should be {id,label,interest_id}\r\n      setSubInterests(subcategories);\r\n      console.log(\"loaded subInterests\", subcategories);\r\n    } catch (error) {\r\n      console.error('Error loading sub-interests:', error);\r\n      setError('Failed to load sub-interests');\r\n      setSubInterests([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const getNextStep = (current: string): string => {\r\n    const currentIndex = ONBOARDING_STEPS.indexOf(current);\r\n    if (currentIndex === -1 || currentIndex === ONBOARDING_STEPS.length - 1) {\r\n      return 'complete';\r\n    }\r\n    return ONBOARDING_STEPS[currentIndex + 1];\r\n  };\r\n\r\n  const getStepCompletionMessage = useCallback((step: string): string => {\r\n    switch (step) {\r\n      case 'interests':\r\n        return `Great! ${selectedInterests.length} interests selected. Let's explore sub-categories!`;\r\n      case 'subcategories':\r\n        return `Perfect! ${selectedSubInterests.length} sub-interests added. Now let's set your dealbreakers.`;\r\n      case 'deal-breakers':\r\n        return `Excellent! ${selectedDealbreakers.length} dealbreakers set. Almost done!`;\r\n      default:\r\n        return 'Step completed successfully!';\r\n    }\r\n  }, [selectedInterests.length, selectedSubInterests.length, selectedDealbreakers.length]);\r\n\r\n  const nextStep = useCallback(async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const nextStepName = getNextStep(currentStep);\r\n\r\n      // Save current step data\r\n      const profileUpdates: Record<string, unknown> = {\r\n        onboarding_step: nextStepName\r\n      };\r\n\r\n      if (currentStep === 'interests') {\r\n        profileUpdates.interests = selectedInterests;\r\n      } else if (currentStep === 'subcategories') {\r\n        profileUpdates.sub_interests = selectedSubInterests;\r\n      } else if (currentStep === 'deal-breakers') {\r\n        profileUpdates.dealbreakers = selectedDealbreakers;\r\n      }\r\n\r\n      await updateUser({ profile: profileUpdates });\r\n\r\n      // Show success toast for step completion\r\n      const completionMessage = getStepCompletionMessage(currentStep);\r\n      showToast(completionMessage, 'success', 3000);\r\n\r\n      // Navigate to the next step\r\n      if (nextStepName === 'complete') {\r\n        router.push('/home');\r\n      } else if (nextStepName === 'subcategories' && currentStep === 'interests') {\r\n        // Pass selected interests as URL params to subcategories\r\n        const interestParams = selectedInterests.length > 0\r\n          ? `?interests=${selectedInterests.join(',')}`\r\n          : '';\r\n        router.push(`/subcategories${interestParams}`);\r\n      } else {\r\n        router.push(`/${nextStepName}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error proceeding to next step:', error);\r\n      setError('Failed to save progress');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [user, currentStep, selectedInterests, selectedSubInterests, selectedDealbreakers, updateUser, showToast, getStepCompletionMessage, router]);\r\n\r\n  const completeOnboarding = useCallback(async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      // Mark onboarding as complete with all final data\r\n      await updateUser({\r\n        profile: {\r\n          onboarding_complete: true,\r\n          onboarding_step: 'complete',\r\n          interests: selectedInterests,\r\n          sub_interests: selectedSubInterests,\r\n          dealbreakers: selectedDealbreakers\r\n        }\r\n      });\r\n\r\n      // Note: All selections are now saved locally via updateUser\r\n\r\n      // Show completion toast\r\n      showToast('üéâ Welcome to KLIO! Your profile is now complete.', 'success', 4000);\r\n    } catch (error) {\r\n      console.error('Error completing onboarding:', error);\r\n      setError('Failed to complete onboarding');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [user, selectedInterests, selectedSubInterests, selectedDealbreakers, updateUser, showToast]);\r\n\r\n  const resetOnboarding = () => {\r\n    setSelectedInterests([]);\r\n    setSelectedSubInterests([]);\r\n    setSelectedDealbreakers([]);\r\n    setError(null);\r\n  };\r\n\r\n  const value: OnboardingContextType = {\r\n    // Data\r\n    interests,\r\n    subInterests,\r\n    selectedInterests,\r\n    selectedSubInterests,\r\n    selectedDealbreakers,\r\n\r\n    // State\r\n    isLoading,\r\n    error,\r\n    currentStep,\r\n\r\n    // Actions\r\n    loadInterests,\r\n    loadSubInterests,\r\n    setSelectedInterests,\r\n    setSelectedSubInterests,\r\n    setSelectedDealbreakers,\r\n    nextStep,\r\n    completeOnboarding,\r\n    resetOnboarding\r\n  };\r\n\r\n  return (\r\n    <OnboardingContext.Provider value={value}>\r\n      {children}\r\n    </OnboardingContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useOnboarding() {\r\n  const context = useContext(OnboardingContext);\r\n  if (context === undefined) {\r\n    throw new Error('useOnboarding must be used within an OnboardingProvider');\r\n  }\r\n  return context;\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1070, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HilarioNengare/Projects/KLIO/src/app/components/Providers/PageTransitionProvider.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useState, ReactNode } from \"react\";\r\n\r\ninterface PageTransitionContextType {\r\n  isLoading: boolean;\r\n  setIsLoading: (loading: boolean) => void;\r\n}\r\n\r\nconst PageTransitionContext = createContext<PageTransitionContextType | null>(null);\r\n\r\nexport function usePageTransition() {\r\n  const context = useContext(PageTransitionContext);\r\n  if (!context) {\r\n    throw new Error(\"usePageTransition must be used within PageTransitionProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\ninterface PageTransitionProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport default function PageTransitionProvider({ children }: PageTransitionProviderProps) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const contextValue: PageTransitionContextType = {\r\n    isLoading,\r\n    setIsLoading\r\n  };\r\n\r\n  return (\r\n    <PageTransitionContext.Provider value={contextValue}>\r\n      {children}\r\n    </PageTransitionContext.Provider>\r\n  );\r\n}"],"names":[],"mappings":";;;;;;;AAEA;AAFA;;;AASA,MAAM,sCAAwB,IAAA,sNAAa,EAAmC;AAEvE,SAAS;IACd,MAAM,UAAU,IAAA,mNAAU,EAAC;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAMe,SAAS,uBAAuB,EAAE,QAAQ,EAA+B;IACtF,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAE3C,MAAM,eAA0C;QAC9C;QACA;IACF;IAEA,qBACE,8OAAC,sBAAsB,QAAQ;QAAC,OAAO;kBACpC;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 1108, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HilarioNengare/Projects/KLIO/src/app/components/Performance/WebVitals.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect } from 'react';\r\n\r\nfunction WebVitals() {\r\n  useEffect(() => {\r\n    // Skip in development to improve performance\r\n    if (process.env.NODE_ENV === 'development') {\r\n      return;\r\n    }\r\n\r\n    // Only load web-vitals in the browser and if available\r\n    if (typeof window !== 'undefined') {\r\n      import('web-vitals').then((webVitals) => {\r\n        const reportMetric = (metric: { name: string; value: number; rating: string }) => {\r\n          // Log vitals in development, send to analytics in production\r\n          if (process.env.NODE_ENV === 'development') {\r\n            console.log(`${metric.name}:`, metric.value, metric.rating);\r\n          }\r\n\r\n          // Production: Send to your analytics provider\r\n          // Example: gtag('event', metric.name, { value: metric.value });\r\n        };\r\n\r\n        // Measure and report Core Web Vitals\r\n        webVitals.onCLS?.(reportMetric);\r\n        // onFID is deprecated in favor of onINP in newer versions\r\n        if (webVitals.onINP) {\r\n          webVitals.onINP(reportMetric);\r\n        } else if (webVitals.onFID) {\r\n          webVitals.onFID(reportMetric);\r\n        }\r\n        webVitals.onFCP?.(reportMetric);\r\n        webVitals.onLCP?.(reportMetric);\r\n        webVitals.onTTFB?.(reportMetric);\r\n      }).catch((error) => {\r\n        // Only log in development\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.warn('Web Vitals library not available:', error.message);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\nexport default WebVitals;"],"names":[],"mappings":";;;;AAEA;AAFA;;AAIA,SAAS;IACP,IAAA,kNAAS,EAAC;QACR,6CAA6C;QAC7C,wCAA4C;YAC1C;QACF;;;IAiCF,GAAG,EAAE;IAEL,OAAO;AACT;uCAEe","debugId":null}},
    {"offset": {"line": 1131, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HilarioNengare/Projects/KLIO/src/app/components/ErrorBoundary/ErrorBoundary.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  fallback?: ReactNode;\r\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error?: Error;\r\n  retryCount: number;\r\n}\r\n\r\nclass ErrorBoundary extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { hasError: false, retryCount: 0 };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): State {\r\n    return { hasError: true, error, retryCount: 0 };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\r\n\r\n    // Report to monitoring service in production\r\n    if (process.env.NODE_ENV === 'production') {\r\n      // Here you would send to error reporting service\r\n      // e.g., Sentry, LogRocket, etc.\r\n    }\r\n\r\n    // Call optional error callback\r\n    this.props.onError?.(error, errorInfo);\r\n  }\r\n\r\n  handleRetry = () => {\r\n    this.setState(prevState => ({\r\n      hasError: false,\r\n      error: undefined,\r\n      retryCount: prevState.retryCount + 1\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // Use custom fallback if provided\r\n      if (this.props.fallback) {\r\n        return this.props.fallback;\r\n      }\r\n\r\n      const isRepeatedError = this.state.retryCount >= 2;\r\n\r\n      return (\r\n        <div className=\"min-h-dvh flex items-center justify-center  bg-white   px-4\">\r\n          <div className=\"max-w-md w-full text-center\">\r\n            <div className=\"w-16 h-16 mx-auto mb-6 bg-red-100 rounded-full flex items-center justify-center\">\r\n              <ion-icon name=\"warning-outline\" style={{ color: '#dc2626', fontSize: '2rem' }}></ion-icon>\r\n            </div>\r\n            <h1 className=\"font-sf text-xl font-600 text-charcoal mb-3\">\r\n              {isRepeatedError ? 'Persistent Error' : 'Something went wrong'}\r\n            </h1>\r\n            <p className=\"font-sf text-sm text-charcoal/70 mb-6 leading-relaxed\">\r\n              {isRepeatedError\r\n                ? 'We\\'re experiencing technical difficulties. Please contact support if this continues.'\r\n                : 'We encountered an unexpected error. Please try again.'\r\n              }\r\n            </p>\r\n\r\n            {/* Error details in development */}\r\n            {process.env.NODE_ENV === 'development' && this.state.error && (\r\n              <details className=\"mb-6 text-left bg-red-50 p-4 rounded-lg\">\r\n                <summary className=\"font-sf text-sm font-600 text-red-600 cursor-pointer\">\r\n                  Error Details (Dev Only)\r\n                </summary>\r\n                <pre className=\"mt-2 text-xs text-red-800 whitespace-pre-wrap overflow-auto\">\r\n                  {this.state.error.stack}\r\n                </pre>\r\n              </details>\r\n            )}\r\n\r\n            <div className=\"space-y-3\">\r\n              <button\r\n                onClick={this.handleRetry}\r\n                disabled={isRepeatedError}\r\n                className={`w-full font-sf text-base font-600 py-3 px-6 rounded-2xl transition-colors duration-300 focus:outline-none focus:ring-2 ${\r\n                  isRepeatedError\r\n                    ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                    : 'bg-sage text-white hover:bg-sage/90 focus:ring-sage/30'\r\n                }`}\r\n              >\r\n                {isRepeatedError ? 'Unable to Retry' : 'Try Again'}\r\n              </button>\r\n\r\n              <button\r\n                onClick={() => window.location.href = '/'}\r\n                className=\"w-full bg-coral text-white font-sf text-base font-600 py-3 px-6 rounded-2xl hover:bg-coral/90 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-coral/30\"\r\n              >\r\n                Go to Home\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAgBA,MAAM,sBAAsB,kNAAS;IACnC,YAAY,KAAY,CAAE;QACxB,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YAAE,UAAU;YAAO,YAAY;QAAE;IAChD;IAEA,OAAO,yBAAyB,KAAY,EAAS;QACnD,OAAO;YAAE,UAAU;YAAM;YAAO,YAAY;QAAE;IAChD;IAEA,kBAAkB,KAAY,EAAE,SAAoB,EAAE;QACpD,QAAQ,KAAK,CAAC,kCAAkC,OAAO;QAEvD,6CAA6C;QAC7C,IAAI,oDAAyB,cAAc;QACzC,iDAAiD;QACjD,gCAAgC;QAClC;QAEA,+BAA+B;QAC/B,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO;IAC9B;IAEA,cAAc;QACZ,IAAI,CAAC,QAAQ,CAAC,CAAA,YAAa,CAAC;gBAC1B,UAAU;gBACV,OAAO;gBACP,YAAY,UAAU,UAAU,GAAG;YACrC,CAAC;IACH,EAAE;IAEF,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvB,kCAAkC;YAClC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC5B;YAEA,MAAM,kBAAkB,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI;YAEjD,qBACE,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAS,MAAK;gCAAkB,OAAO;oCAAE,OAAO;oCAAW,UAAU;gCAAO;;;;;;;;;;;sCAE/E,8OAAC;4BAAG,WAAU;sCACX,kBAAkB,qBAAqB;;;;;;sCAE1C,8OAAC;4BAAE,WAAU;sCACV,kBACG,0FACA;;;;;;wBAKL,oDAAyB,iBAAiB,IAAI,CAAC,KAAK,CAAC,KAAK,kBACzD,8OAAC;4BAAQ,WAAU;;8CACjB,8OAAC;oCAAQ,WAAU;8CAAuD;;;;;;8CAG1E,8OAAC;oCAAI,WAAU;8CACZ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK;;;;;;;;;;;;sCAK7B,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS,IAAI,CAAC,WAAW;oCACzB,UAAU;oCACV,WAAW,CAAC,uHAAuH,EACjI,kBACI,iDACA,0DACJ;8CAED,kBAAkB,oBAAoB;;;;;;8CAGzC,8OAAC;oCACC,SAAS,IAAM,OAAO,QAAQ,CAAC,IAAI,GAAG;oCACtC,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;QAOX;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 1291, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HilarioNengare/Projects/KLIO/src/app/lib/supabase.ts"],"sourcesContent":["import { getBrowserSupabase } from './supabase/client'\r\n\r\n// Create the client-side Supabase instance\r\nexport const supabase = getBrowserSupabase()\r\n\r\n// Database types\r\nexport interface Profile {\r\n  id: string\r\n  onboarding_step: string\r\n  onboarding_complete: boolean\r\n  interests: string[]\r\n  sub_interests: string[]\r\n  dealbreakers: string[]\r\n  created_at: string\r\n}\r\n\r\nexport interface Taxonomy {\r\n  id: string\r\n  name: string\r\n  parent_id?: string\r\n  level: number\r\n  created_at: string\r\n}\r\n\r\nexport interface UserTaxonomy {\r\n  id: string\r\n  user_id: string\r\n  taxonomy_id: string\r\n  type: 'interest' | 'sub_interest' | 'dealbreaker'\r\n  created_at: string\r\n}\r\n\r\n// Database helper functions with performance optimizations\r\nexport const createProfile = async (userId: string) => {\r\n  const { data, error } = await supabase\r\n    .from('profiles')\r\n    .insert([\r\n      {\r\n        user_id: userId,\r\n        onboarding_step: 'interests',\r\n        onboarding_complete: false,\r\n        interests: [],\r\n        sub_interests: [],\r\n        dealbreakers: []\r\n      }\r\n    ])\r\n    .select()\r\n    .single()\r\n    .abortSignal(AbortSignal.timeout(10000)) // 10 second timeout\r\n\r\n  if (error) throw error\r\n  return data\r\n}\r\n\r\nexport const getProfile = async (userId: string) => {\r\n  const { data, error } = await supabase\r\n    .from('profiles')\r\n    .select('*')\r\n    .eq('user_id', userId)\r\n    .single()\r\n    .abortSignal(AbortSignal.timeout(5000)) // 5 second timeout\r\n\r\n  if (error) throw error\r\n  return data\r\n}\r\n\r\nexport const updateProfile = async (userId: string, updates: Partial<Profile>) => {\r\n  const { data, error } = await supabase\r\n    .from('profiles')\r\n    .update(updates)\r\n    .eq('user_id', userId)\r\n    .select()\r\n    .single()\r\n    .abortSignal(AbortSignal.timeout(5000))\r\n\r\n  if (error) throw error\r\n  return data\r\n}\r\n\r\nexport const getInterests = async () => {\r\n  const { data, error } = await supabase\r\n    .from('v_interests')\r\n    .select('*')\r\n    .order('name', { ascending: true })\r\n    .limit(50) // Reasonable limit\r\n    .abortSignal(AbortSignal.timeout(3000))\r\n\r\n  if (error) throw error\r\n  return data || []\r\n}\r\n\r\nexport const getSubInterests = async (parentIds?: string[]) => {\r\n  let query = supabase\r\n    .from('v_sub_interests')\r\n    .select('*')\r\n    .order('name', { ascending: true })\r\n    .limit(100) // Reasonable limit\r\n\r\n  if (parentIds && parentIds.length > 0) {\r\n    query = query.in('parent_id', parentIds)\r\n  }\r\n\r\n  const { data, error } = await query.abortSignal(AbortSignal.timeout(3000))\r\n\r\n  if (error) throw error\r\n  return data || []\r\n}\r\n\r\nexport const saveUserSelections = async (\r\n  userId: string,\r\n  selections: { id: string; type: 'interest' | 'sub_interest' | 'dealbreaker' }[]\r\n) => {\r\n  // First, clear existing selections\r\n  await supabase\r\n    .from('user_taxonomies')\r\n    .delete()\r\n    .eq('user_id', userId)\r\n\r\n  // Then insert new selections\r\n  if (selections.length > 0) {\r\n    const { error } = await supabase\r\n      .from('user_taxonomies')\r\n      .insert(\r\n        selections.map(selection => ({\r\n          user_id: userId,\r\n          taxonomy_id: selection.id,\r\n          type: selection.type\r\n        }))\r\n      )\r\n\r\n    if (error) throw error\r\n  }\r\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;AAGO,MAAM,WAAW,IAAA,6JAAkB;AA8BnC,MAAM,gBAAgB,OAAO;IAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,YACL,MAAM,CAAC;QACN;YACE,SAAS;YACT,iBAAiB;YACjB,qBAAqB;YACrB,WAAW,EAAE;YACb,eAAe,EAAE;YACjB,cAAc,EAAE;QAClB;KACD,EACA,MAAM,GACN,MAAM,GACN,WAAW,CAAC,YAAY,OAAO,CAAC,QAAQ,oBAAoB;;IAE/D,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAEO,MAAM,aAAa,OAAO;IAC/B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,WAAW,QACd,MAAM,GACN,WAAW,CAAC,YAAY,OAAO,CAAC,OAAO,mBAAmB;;IAE7D,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAEO,MAAM,gBAAgB,OAAO,QAAgB;IAClD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,YACL,MAAM,CAAC,SACP,EAAE,CAAC,WAAW,QACd,MAAM,GACN,MAAM,GACN,WAAW,CAAC,YAAY,OAAO,CAAC;IAEnC,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAEO,MAAM,eAAe;IAC1B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,eACL,MAAM,CAAC,KACP,KAAK,CAAC,QAAQ;QAAE,WAAW;IAAK,GAChC,KAAK,CAAC,IAAI,mBAAmB;KAC7B,WAAW,CAAC,YAAY,OAAO,CAAC;IAEnC,IAAI,OAAO,MAAM;IACjB,OAAO,QAAQ,EAAE;AACnB;AAEO,MAAM,kBAAkB,OAAO;IACpC,IAAI,QAAQ,SACT,IAAI,CAAC,mBACL,MAAM,CAAC,KACP,KAAK,CAAC,QAAQ;QAAE,WAAW;IAAK,GAChC,KAAK,CAAC,KAAK,mBAAmB;;IAEjC,IAAI,aAAa,UAAU,MAAM,GAAG,GAAG;QACrC,QAAQ,MAAM,EAAE,CAAC,aAAa;IAChC;IAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,WAAW,CAAC,YAAY,OAAO,CAAC;IAEpE,IAAI,OAAO,MAAM;IACjB,OAAO,QAAQ,EAAE;AACnB;AAEO,MAAM,qBAAqB,OAChC,QACA;IAEA,mCAAmC;IACnC,MAAM,SACH,IAAI,CAAC,mBACL,MAAM,GACN,EAAE,CAAC,WAAW;IAEjB,6BAA6B;IAC7B,IAAI,WAAW,MAAM,GAAG,GAAG;QACzB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SACrB,IAAI,CAAC,mBACL,MAAM,CACL,WAAW,GAAG,CAAC,CAAA,YAAa,CAAC;gBAC3B,SAAS;gBACT,aAAa,UAAU,EAAE;gBACzB,MAAM,UAAU,IAAI;YACtB,CAAC;QAGL,IAAI,OAAO,MAAM;IACnB;AACF","debugId":null}},
    {"offset": {"line": 1373, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HilarioNengare/Projects/KLIO/src/app/hooks/useBusinessNotifications.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useRef } from 'react';\r\nimport { supabase } from '../lib/supabase';\r\nimport { useToast } from '../contexts/ToastContext';\r\n\r\nexport function useBusinessNotifications() {\r\n  const { showToast } = useToast();\r\n  const subscriptionRef = useRef<any>(null);\r\n  const lastNotificationTimeRef = useRef<number>(0);\r\n\r\n  useEffect(() => {\r\n    // Don't subscribe if not in browser\r\n    if (typeof window === 'undefined') return;\r\n\r\n    // Throttle notifications to prevent spam (min 5 seconds between notifications)\r\n    const THROTTLE_MS = 5000;\r\n\r\n    const handleNewBusiness = (payload: any) => {\r\n      const now = Date.now();\r\n\r\n      // Throttle notifications\r\n      if (now - lastNotificationTimeRef.current < THROTTLE_MS) {\r\n        return;\r\n      }\r\n\r\n      lastNotificationTimeRef.current = now;\r\n\r\n      // Show toast notification\r\n      const businessName = payload.new?.name || 'A new business';\r\n      showToast(\r\n        `${businessName} just joined KLIO! üéâ`,\r\n        'sage',\r\n        6000\r\n      );\r\n    };\r\n\r\n    // Subscribe to new inserts in the businesses table\r\n    const channel = supabase\r\n      .channel('business-notifications')\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: 'INSERT',\r\n          schema: 'public',\r\n          table: 'businesses'\r\n        },\r\n        handleNewBusiness\r\n      )\r\n      .subscribe((status) => {\r\n        if (status === 'SUBSCRIBED') {\r\n          console.log('‚úÖ Subscribed to business notifications');\r\n        }\r\n      });\r\n\r\n    subscriptionRef.current = channel;\r\n\r\n    // Cleanup subscription on unmount\r\n    return () => {\r\n      if (subscriptionRef.current) {\r\n        supabase.removeChannel(subscriptionRef.current);\r\n        console.log('üîå Unsubscribed from business notifications');\r\n      }\r\n    };\r\n  }, [showToast]);\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;AAMO,SAAS;IACd,MAAM,EAAE,SAAS,EAAE,GAAG,IAAA,mJAAQ;IAC9B,MAAM,kBAAkB,IAAA,+MAAM,EAAM;IACpC,MAAM,0BAA0B,IAAA,+MAAM,EAAS;IAE/C,IAAA,kNAAS,EAAC;QACR,oCAAoC;QACpC,wCAAmC;;;QAEnC,+EAA+E;QAC/E,MAAM;QAEN,MAAM;QAmBN,mDAAmD;QACnD,MAAM;IA0BR,GAAG;QAAC;KAAU;AAChB","debugId":null}},
    {"offset": {"line": 1406, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HilarioNengare/Projects/KLIO/src/app/components/Notifications/BusinessNotifications.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useBusinessNotifications } from '../../hooks/useBusinessNotifications';\r\n\r\n/**\r\n * BusinessNotifications Component\r\n *\r\n * Listens for real-time business insertions via Supabase and displays\r\n * toast notifications at the bottom-left of the screen.\r\n *\r\n * This component should be placed once in the app layout.\r\n */\r\nexport default function BusinessNotifications() {\r\n  useBusinessNotifications();\r\n\r\n  // This component doesn't render anything - it just sets up the subscription\r\n  return null;\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;AAYe,SAAS;IACtB,IAAA,2KAAwB;IAExB,4EAA4E;IAC5E,OAAO;AACT","debugId":null}}]
}